// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      Role     @default(USER)
  tokens    Token[]
  myMemes   Meme[]
  Like      Like[]
}

model Token {
  id     Int    @id @default(autoincrement())
  token  String @unique
  userId Int
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

enum Role {
  USER
  ADMIN
}

model Meme {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  imageName   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  authorId    Int
  author      User     @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  likes       Like[]
  likesCount  Int      @default(0)
}

model Like {
  id     Int  @id @default(autoincrement())
  userId Int
  memeId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  meme   Meme @relation(fields: [memeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
